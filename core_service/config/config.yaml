serviceName: core_service
grpc:
  port: :5002
  development: true
probes:
  readinessPath: /ready
  livenessPath: /live
  port: :3003
  pprof: :6003
  prometheusPath: /metrics
  prometheusPort: :8003
  checkIntervalSeconds: 10
logger:
  level: debug
  devMode: false
  encoder: json
postgres:
  host: localhost
  port: 5432
  user: postgres
  password: postgres
  dbName: products
  sslMode: false
kafka:
  brokers: ["localhost:9092"]
  groupID: writer_microservice_consumer
  initTopics: true
kafkaTopics:
  productCreated:
    topicName: product_created
    partitions: 1
    replicationFactor: 1
  productUpdated:
    topicName: product_updated
    partitions: 1
    replicationFactor: 1
  productDeleted:
    topicName: product_deleted
    partitions: 1
    replicationFactor: 1

  productCreatedDev:
    topicName: product_createdDev
    partitions: 1
    replicationFactor: 1
redis:
  addr: "localhost:6379"
  password: ""
  db: 0
  poolSize: 300
serviceSettings:
  redisMicroservicePrefixKey: "reader:product"
otl:
  enable: true
  serviceName: core_service
  endpoint: "localhost:4317"
keycloak:
  host: http://localhost:8080
  realm: 5SYSTEMS
  clientID: api-accounts
  clientSecret: amg8vpkpsEZcnAGiR1ZaisYtk5vQCsXo
5sApi:
  adminApiUrl: "https://api.5systems.ru/admin/v1"
  authApiUrl: "https://api.5systems.ru/auth/v1"
  exportApiUrl: "https://api.5systems.ru/export/v1"
  storageApiUrl: "https://api.5systems.ru/storage/v1"

